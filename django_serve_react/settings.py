"""
Django settings for django_serve_react project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--2^mdj0^jb=!ku2-o$z1w=#=zq)m#n=lvg7e-+wh6)htjo%v)t'

# # Get secret key from Google Cloud Secret Manager
# from google.cloud import secretmanager

# def access_secret_version(secret_id):
#     """
#     Access a secret version in Secret Manager.
#     """
#     client = secretmanager.SecretManagerServiceClient()
#     project_id = 'django-gae-pfw'
#     name = f"projects/{project_id}/secrets/{secret_id}/versions/latest"
#     response = client.access_secret_version(name=name)
#     return response.payload.data.decode('UTF-8')

# SECRET_KEY = access_secret_version('SECRET_KEY')

# print(f"SECRET_KEY: {SECRET_KEY}")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False # Time for production

ALLOWED_HOSTS = ['localhost', '0.0.0.0', '127.0.0.1',
                 'pfwcs-deploy-django-71a40e3ba2d1.herokuapp.com', # Heroku app domain
                 'django-gae-pfw.uc.r.appspot.com'] # Google App Engine domain


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    # 'corsheaders',
    'django_serve_react',
    'todo.apps.TodoConfig',
    'user.apps.UserConfig'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware', # For serving static files in production
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    # 'corsheaders.middleware.CorsMiddleware', Don't need in production
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Google Cloud and Heroku should be trusted origins
CSRF_TRUSTED_ORIGINS = [
    'https://pfwcs-deploy-django-71a40e3ba2d1.herokuapp.com', 
    'https://django-gae-pfw.uc.r.appspot.com'
]

# CORS_ALLOWED_ORIGINS = [
#     'https://pfwcs-deploy-django-71a40e3ba2d1.herokuapp.com',
#     'https://django-gae-pfw.uc.r.appspot.com'
# ]

# CORS_ALLOW_CREDENTIALS = True

ROOT_URLCONF = 'django_serve_react.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],  # Adjust the path as needed
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
# Add React build from front_end/dist to Django's static files
STATIC_URL = '/staticfiles/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [
    BASE_DIR / 'front_end' / 'dist',  # Adjust the path as needed
]

WSGI_APPLICATION = 'django_serve_react.wsgi.application'

STORAGES = {
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage", # For serving static files in production
    },
}

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # }
    # Now using Google Cloud PostgreSQL
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'HOST': '/cloudsql/django-gae-pfw:us-central1:django-gae-pfw',
        # 'HOST': '127.0.0.1', # Testing locally with Cloud SQL Proxy
        'USER': 'pfw_student',
        'PASSWORD': 'cs537pfw',
        'NAME': 'postgres',
        'PORT': '5432',
    }
}

# Authentication using DRF
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ],
}

SESSION_ENGINE = "django.contrib.sessions.backends.db"  # Default

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
        },
    },
}


